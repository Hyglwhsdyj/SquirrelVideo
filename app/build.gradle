buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven { url "https://raw.githubusercontent.com/umeng/mvn-repo-umeng/master/repository" }
    }
    dependencies {
        classpath 'com.neenbedankt.gradle.plugins:android-apt:1.4'
    }
}

apply plugin: 'android'
apply plugin: 'android-apt'

apt {
    arguments {
        androidManifestFile variant.outputs[0].processResources.manifestFile
        resourcePackageName 'com.songshu.squirrelvideo'
    }
}

android {
    compileSdkVersion 21
    buildToolsVersion "21.1.2"

    defaultConfig {
        minSdkVersion 11
        targetSdkVersion 19
        versionCode 1
        versionName "1.0"
    }

    signingConfigs {
        release {
            storeFile file('ssy.keystore')
            storePassword 'xiaosongshu'
            keyAlias 'xiaosongshu'
            keyPassword 'xiaosongshu'
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
            signingConfig signingConfigs.release
        }
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_6
        targetCompatibility JavaVersion.VERSION_1_6
    }
}

task copyNativeLibs(type: Copy) {
    from fileTree(dir: 'libs', include: '**/*.so' )  into  'build/native-libs'
}

tasks.withType(JavaCompile) {
    compileTask -> compileTask.dependsOn(copyNativeLibs)
}

clean.dependsOn 'cleanCopyNativeLibs'

tasks.withType(com.android.build.gradle.tasks.PackageApplication) { pkgTask ->
   /* pkgTask.jniFolders = new HashSet<File>()
    pkgTask.jniFolders.add(file('build/native-libs'))*/
}

dependencies {
    compile fileTree(dir: 'libs', include: '*.jar')
    compile 'com.android.support:appcompat-v7:22.2.0'
    compile 'org.androidannotations:androidannotations-api:3.0.1'
    compile 'com.android.support:support-v4:21.0.3'
    compile 'com.j256.ormlite:ormlite-android:4.48'
    compile 'com.loopj.android:android-async-http:1.4.6'
    compile 'de.greenrobot:eventbus:2.2.1'
    compile 'com.octo.android.robospice:robospice-ormlite:1.4.14'
    compile 'com.octo.android.robospice:robospice-retrofit:1.4.14'
    compile 'com.octo.android.robospice:robospice-spring-android:1.4.14'
    compile 'com.github.yoojia:fire-eye:1.2@aar'
    compile 'com.makeramen:roundedimageview:1.4.0'
    compile 'com.nostra13.universalimageloader:universal-image-loader:1.9.3'
    compile 'com.mani:thindownloadmanager:1.0.0'
    apt "org.androidannotations:androidannotations:3.2"
    compile "org.androidannotations:androidannotations-api:3.2"
    compile project(':vitamio')
}

android {
    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/notice.txt'
    }
}
